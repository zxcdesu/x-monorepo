generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int           @id @default(autoincrement())
  email    String        @unique
  name     String
  password String
  projects ProjectUser[]
}

model Project {
  id     Int           @id @default(autoincrement())
  name   String
  users  ProjectUser[]
  roles  Role[]
  wallet Wallet?       @relation(fields: [id], references: [projectId])
}

model ProjectUser {
  projectId Int
  project   Project @relation(fields: [projectId], references: [id])
  userId    Int
  user      User    @relation(fields: [userId], references: [id])
  roles     Role[]

  @@unique([projectId, userId])
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String
  projectId   Int
  project     Project      @relation(fields: [projectId], references: [id])
  userId      Int?
  users       ProjectUser? @relation(fields: [projectId, userId], references: [projectId, userId])
  default     Boolean      @default(false)
  permissions String[]     @default([])
}

model Wallet {
  projectId      Int       @id
  project        Project?
  country        String
  currency       String    @default("USD")
  currentBalance Decimal   @default(0) @db.Decimal(15, 6)
  payments       Payment[]
}

enum PaymentProvider {
  Yookassa
}

enum PaymentStatus {
  Pending
  Succeeded
  Cancelled
  Refunded
}

model Payment {
  id           Int             @id @default(autoincrement())
  projectId    Int
  wallet       Wallet          @relation(fields: [projectId], references: [projectId])
  externalId   String?
  provider     PaymentProvider
  status       PaymentStatus   @default(Pending)
  amount       Decimal         @db.Decimal(15, 6)
  incomeAmount Decimal?        @db.Decimal(15, 6)
  expiresAt    DateTime?

  @@unique([externalId, provider])
}
